/*
전류는 저항이 낮은 쪽으로 이동하려고 합니다.
도선의 저항은 매우 작기 때문에 스위치를 아두이노에 저항 없이 연결할 경우
모든 곳의 저항이 낮으므로 전류가 확실하게 정해지지 않고 이곳 저곳 흘렀다 말았다 하는 애매한 상태가 됩니다.

아두이노를 통해 신호를 받으면 1과 0이 무작위로 표시되는 것을 볼 수 있고
LED를 연결하면 스위치를 누르지 않았는데도 불이 켜졌다가 꺼지기를 반복합니다.

즉, 저항 없이 바로 연결하면 교란 미세전류가 매우 심하여 LED가 마음대로 깜빡입니다.

이러한 현상을 플롯(float)상태라고 하며, 저항을 연결하여 신호를 확실하게 정해주어야 합니다.
이때 저항은 LED를 연결할 때 처럼 작은(220~330) 저항을 쓰지 않고 큰 저항(10K)을 사용합니다.
평소(스위치off)에 HIGH 신호를 갖게 하는 연결 방법을 풀업(pull up)방법이라고 하고 - 평소에 끌어 올림
평소(스위치off)에 LOW 신호를 갖게 하는 연결 방법을 풀다운(pull down)방법이라고 합니다. - 평소에 끌어 내림

풀업(pull up)저항은 5V쪽에 저항을 연결해주며, 이 경우 전류가 항상 5V 쪽으로 흐르기 때문에
스위치를 누르지 않을 때 HIGH 신호를 갖게 되며, 스위치를 누를 때 LOW 상태가 됩니다.

풀다운(pull down)저항은 GND쪽에 저항을 연결해주며, 이 경우 전류가 항상 GND 쪽으로 흐르기 때문에
스위치를 누르지 않을 때 LOW 신호를 갖게 되며, 스위치를 누를 때 HIGH 상태가 됩니다.

버튼을 누를 때 HIGH 신호가 출력되는 것이  의미가 명확히 전달되므로 풀다운 저항을 더 많이 씁니다.
*/

#define Button 7 //7번 핀을 Button으로 설정
//내장된 함수 Switch와 충돌하므로 Button이라고 설정 해줍니다.

void setup() {
  pinMode(Button, INPUT); //Button을 입력모드로 설정
  Serial.begin(9600); //시리얼 통신을 시작. 통신 속도는 9600
}

/* 아날로그 핀은 입력핀이 기본이므로 모드설정을 따로 하지 않았지만
  디지털 핀을 통해 센서 값을 받을 땐 입력모드 설정을 해줘야 합니다. */

void loop() {
  int ButtonValue = digitalRead(Button);
  //Button을 통해 받는 값을 ButtonValue라는 변수로 설정
  //매번 측정된 값을 새롭게 바꾸어야 하므로 loop 안에서 int로 변수 설정
  Serial.println(ButtonValue); //시리얼모니터에 ButtonValue값을 출력 후 줄바꿈
  delay(500); //0.5초간 대기
}

/* digitalRead(Button)을 ButtonValue로 변수설정하지 않고
  Serial.println(digitalRead(Button)로 표현하는 것이 의미 전달도 충분히 되고 더 깔끔합니다.

  아직 처음이기 때문에 디지털 읽기 값을 다른 이름으로 변수설정 해주고
  변수 설정된 값을 시리얼모니터에 출력합니다.
  
  이 다음 코드부터는 변수 설정을 하지 않고 곧바로 digitalRead를 사용해봅시다.
 */